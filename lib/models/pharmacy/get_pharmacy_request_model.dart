///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class GetPharmacyRequestModelPharmaciesPharmacyIdPhone {
/*
{
  "code": "002",
  "number": "01142951602",
  "mainNumber": true,
  "_id": "65ce4add125f5aa580807fb0"
} 
*/

  String? code;
  String? number;
  bool? mainNumber;
  String? Id;

  GetPharmacyRequestModelPharmaciesPharmacyIdPhone({
    this.code,
    this.number,
    this.mainNumber,
    this.Id,
  });
  GetPharmacyRequestModelPharmaciesPharmacyIdPhone.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    number = json['number']?.toString();
    mainNumber = json['mainNumber'];
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['number'] = number;
    data['mainNumber'] = mainNumber;
    data['_id'] = Id;
    return data;
  }
}

class GetPharmacyRequestModelPharmaciesPharmacyIdAddressLocation {
/*
{
  "lat": 53468374683738780,
  "lang": 53468374683738780
}
*/

  String? lat;
  String? lang;

  GetPharmacyRequestModelPharmaciesPharmacyIdAddressLocation({
    this.lat,
    this.lang,
  });
  GetPharmacyRequestModelPharmaciesPharmacyIdAddressLocation.fromJson(
      Map<String, dynamic> json) {
    lat = json['lat']?.toString();
    lang = json['lang']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lang'] = lang;
    return data;
  }
}

class GetPharmacyRequestModelPharmaciesPharmacyIdAddress {
/*
{
  "location": {
    "lat": 53468374683738780,
    "lang": 53468374683738780
  },
  "country": "egypt",
  "city": "cairo",
  "gov": "cairo",
  "details": "407 omer ibn khattab cairo egypt"
}
*/

  GetPharmacyRequestModelPharmaciesPharmacyIdAddressLocation? location;
  String? country;
  String? city;
  String? gov;
  String? details;

  GetPharmacyRequestModelPharmaciesPharmacyIdAddress({
    this.location,
    this.country,
    this.city,
    this.gov,
    this.details,
  });
  GetPharmacyRequestModelPharmaciesPharmacyIdAddress.fromJson(
      Map<String, dynamic> json) {
    location = (json['location'] != null)
        ? GetPharmacyRequestModelPharmaciesPharmacyIdAddressLocation.fromJson(
            json['location'])
        : null;
    country = json['country']?.toString();
    city = json['city']?.toString();
    gov = json['gov']?.toString();
    details = json['details']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (location != null) {
      data['location'] = location!.toJson();
    }
    data['country'] = country;
    data['city'] = city;
    data['gov'] = gov;
    data['details'] = details;
    return data;
  }
}

class GetPharmacyRequestModelPharmaciesPharmacyIdName {
/*
{
  "AR": "صيدليتي",
  "EN": "pharmacy one"
}
*/

  String? AR;
  String? EN;

  GetPharmacyRequestModelPharmaciesPharmacyIdName({
    this.AR,
    this.EN,
  });
  GetPharmacyRequestModelPharmaciesPharmacyIdName.fromJson(
      Map<String, dynamic> json) {
    AR = json['AR']?.toString();
    EN = json['EN']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['AR'] = AR;
    data['EN'] = EN;
    return data;
  }
}

class GetPharmacyRequestModelPharmaciesPharmacyId {
/*
{
  "name": {
    "AR": "صيدليتي",
    "EN": "pharmacy one"
  },
  "address": {
    "location": {
      "lat": 53468374683738780,
      "lang": 53468374683738780
    },
    "country": "egypt",
    "city": "cairo",
    "gov": "cairo",
    "details": "407 omer ibn khattab cairo egypt"
  },
  "pendingEmployeeInvitation": [
    null
  ],
  "_id": "65ce4add125f5aa580807faf",
  "email": "routesession111@gmail.com",
  "password": "$2a$08$ssnPU2IXo5taw8Ma8p1GreZugfG08m6p.ZQzT.kgi1/A3Hl5TTRSO",
  "country": "egypt",
  "times": [
    null
  ],
  "phone": [
    {
      "code": "002",
      "number": "01142951602",
      "mainNumber": true,
      "_id": "65ce4add125f5aa580807fb0"
    }
  ],
  "imageFolderName": "wcf3e6oFC5XGiqUrhFKcX",
  "employee": [
    "65c938ee394e1da8627a72d8"
  ],
  "approved": true,
  "confirmEmail": true,
  "confirmCode": "$2a$08$VrzZtGcC9cHXziti/Y2N3u5WEg/xMh8iZxM98umBS.45y9yikSMmy",
  "forgetCode": null,
  "isDeleted": false,
  "headquarter": "65ce137ff2c8cc22a2b166fd",
  "createdAt": "2024-02-15T17:33:17.925Z",
  "updatedAt": "2024-06-25T17:08:22.128Z",
  "__v": 0,
  "playerId": "6564645",
  "updatedBy": "65c7f5cb1f1940c31b9205d3",
  "commercialRegister": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/jHvArxF3u6VqcNYQLBOhw_SQL.pdf",
  "license": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/ZZ-OTdZNz2TBe2sVgBx7g_good_project.png",
  "taxCard": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/8S4dnbTc35Exgf-6H317M_good care.png",
  "id": "65ce4add125f5aa580807faf"
}
*/

  GetPharmacyRequestModelPharmaciesPharmacyIdName? name;
  GetPharmacyRequestModelPharmaciesPharmacyIdAddress? address;
  List<String?>? pendingEmployeeInvitation;
  String? Id;
  String? email;
  String? password;
  String? country;
  List<String?>? times;
  List<GetPharmacyRequestModelPharmaciesPharmacyIdPhone?>? phone;
  String? imageFolderName;
  List<String?>? employee;
  bool? approved;
  bool? confirmEmail;
  String? confirmCode;
  String? forgetCode;
  bool? isDeleted;
  String? headquarter;
  String? createdAt;
  String? updatedAt;
  String? _V;
  String? playerId;
  String? updatedBy;
  String? commercialRegister;
  String? license;
  String? taxCard;
  String? id;

  GetPharmacyRequestModelPharmaciesPharmacyId({
    this.name,
    this.address,
    this.pendingEmployeeInvitation,
    this.Id,
    this.email,
    this.password,
    this.country,
    this.times,
    this.phone,
    this.imageFolderName,
    this.employee,
    this.approved,
    this.confirmEmail,
    this.confirmCode,
    this.forgetCode,
    this.isDeleted,
    this.headquarter,
    this.createdAt,
    this.updatedAt,
    this.playerId,
    this.updatedBy,
    this.commercialRegister,
    this.license,
    this.taxCard,
    this.id,
  });
  GetPharmacyRequestModelPharmaciesPharmacyId.fromJson(
      Map<String, dynamic> json) {
    name = (json['name'] != null)
        ? GetPharmacyRequestModelPharmaciesPharmacyIdName.fromJson(json['name'])
        : null;
    address = (json['address'] != null)
        ? GetPharmacyRequestModelPharmaciesPharmacyIdAddress.fromJson(
            json['address'])
        : null;

    Id = json['_id']?.toString();
    email = json['email']?.toString();
    password = json['password']?.toString();
    country = json['country']?.toString();

    if (json['phone'] != null) {
      final v = json['phone'];
      final arr0 = <GetPharmacyRequestModelPharmaciesPharmacyIdPhone>[];
      v.forEach((v) {
        arr0.add(GetPharmacyRequestModelPharmaciesPharmacyIdPhone.fromJson(v));
      });
      phone = arr0;
    }
    imageFolderName = json['imageFolderName']?.toString();
    if (json['employee'] != null) {
      final v = json['employee'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      employee = arr0;
    }
    approved = json['approved'];
    confirmEmail = json['confirmEmail'];
    confirmCode = json['confirmCode']?.toString();
    forgetCode = json['forgetCode']?.toString();
    isDeleted = json['isDeleted'];
    headquarter = json['headquarter']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    _V = json['__v']?.toString();
    playerId = json['playerId']?.toString();
    updatedBy = json['updatedBy']?.toString();
    commercialRegister = json['commercialRegister']?.toString();
    license = json['license']?.toString();
    taxCard = json['taxCard']?.toString();
    id = json['id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (name != null) {
      data['name'] = name!.toJson();
    }
    if (address != null) {
      data['address'] = address!.toJson();
    }

    data['_id'] = Id;
    data['email'] = email;
    data['password'] = password;
    data['country'] = country;

    if (phone != null) {
      final v = phone;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['phone'] = arr0;
    }
    data['imageFolderName'] = imageFolderName;
    if (employee != null) {
      final v = employee;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['employee'] = arr0;
    }
    data['approved'] = approved;
    data['confirmEmail'] = confirmEmail;
    data['confirmCode'] = confirmCode;
    data['forgetCode'] = forgetCode;
    data['isDeleted'] = isDeleted;
    data['headquarter'] = headquarter;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['__v'] = _V;
    data['playerId'] = playerId;
    data['updatedBy'] = updatedBy;
    data['commercialRegister'] = commercialRegister;
    data['license'] = license;
    data['taxCard'] = taxCard;
    data['id'] = id;
    return data;
  }
}

class GetPharmacyRequestModelPharmacies {
/*
{
  "_id": "665cb5694a0d96c1e0c36ab7",
  "pharmacyId": {
    "name": {
      "AR": "صيدليتي",
      "EN": "pharmacy one"
    },
    "address": {
      "location": {
        "lat": 53468374683738780,
        "lang": 53468374683738780
      },
      "country": "egypt",
      "city": "cairo",
      "gov": "cairo",
      "details": "407 omer ibn khattab cairo egypt"
    },
    "pendingEmployeeInvitation": [
      null
    ],
    "_id": "65ce4add125f5aa580807faf",
    "email": "routesession111@gmail.com",
    "password": "$2a$08$ssnPU2IXo5taw8Ma8p1GreZugfG08m6p.ZQzT.kgi1/A3Hl5TTRSO",
    "country": "egypt",
    "times": [
      null
    ],
    "phone": [
      {
        "code": "002",
        "number": "01142951602",
        "mainNumber": true,
        "_id": "65ce4add125f5aa580807fb0"
      }
    ],
    "imageFolderName": "wcf3e6oFC5XGiqUrhFKcX",
    "employee": [
      "65c938ee394e1da8627a72d8"
    ],
    "approved": true,
    "confirmEmail": true,
    "confirmCode": "$2a$08$VrzZtGcC9cHXziti/Y2N3u5WEg/xMh8iZxM98umBS.45y9yikSMmy",
    "forgetCode": null,
    "isDeleted": false,
    "headquarter": "65ce137ff2c8cc22a2b166fd",
    "createdAt": "2024-02-15T17:33:17.925Z",
    "updatedAt": "2024-06-25T17:08:22.128Z",
    "__v": 0,
    "playerId": "6564645",
    "updatedBy": "65c7f5cb1f1940c31b9205d3",
    "commercialRegister": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/jHvArxF3u6VqcNYQLBOhw_SQL.pdf",
    "license": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/ZZ-OTdZNz2TBe2sVgBx7g_good_project.png",
    "taxCard": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/8S4dnbTc35Exgf-6H317M_good care.png",
    "id": "65ce4add125f5aa580807faf"
  },
  "createdBy": "65ce4add125f5aa580807faf",
  "approved": false,
  "recheck": false,
  "createdAt": "2024-06-02T18:09:45.850Z",
  "updatedAt": "2024-06-02T18:09:45.850Z",
  "__v": 0
}
*/

  String? Id;
  GetPharmacyRequestModelPharmaciesPharmacyId? pharmacyId;
  String? createdBy;
  bool? approved;
  bool? recheck;
  String? createdAt;
  String? updatedAt;
  String? _V;

  GetPharmacyRequestModelPharmacies({
    this.Id,
    this.pharmacyId,
    this.createdBy,
    this.approved,
    this.recheck,
    this.createdAt,
    this.updatedAt,
  });
  GetPharmacyRequestModelPharmacies.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    pharmacyId = (json['pharmacyId'] != null)
        ? GetPharmacyRequestModelPharmaciesPharmacyId.fromJson(
            json['pharmacyId'])
        : null;
    createdBy = json['createdBy']?.toString();
    approved = json['approved'];
    recheck = json['recheck'];
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    _V = json['__v']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    if (pharmacyId != null) {
      data['pharmacyId'] = pharmacyId!.toJson();
    }
    data['createdBy'] = createdBy;
    data['approved'] = approved;
    data['recheck'] = recheck;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['__v'] = _V;
    return data;
  }
}

class GetPharmacyRequestModel {
/*
{
  "message": "Done",
  "count": 2,
  "hasNext": null,
  "hasPrevious": true,
  "limit": 5,
  "pharmacies": [
    {
      "_id": "665cb5694a0d96c1e0c36ab7",
      "pharmacyId": {
        "name": {
          "AR": "صيدليتي",
          "EN": "pharmacy one"
        },
        "address": {
          "location": {
            "lat": 53468374683738780,
            "lang": 53468374683738780
          },
          "country": "egypt",
          "city": "cairo",
          "gov": "cairo",
          "details": "407 omer ibn khattab cairo egypt"
        },
        "pendingEmployeeInvitation": [
          null
        ],
        "_id": "65ce4add125f5aa580807faf",
        "email": "routesession111@gmail.com",
        "password": "$2a$08$ssnPU2IXo5taw8Ma8p1GreZugfG08m6p.ZQzT.kgi1/A3Hl5TTRSO",
        "country": "egypt",
        "times": [
          null
        ],
        "phone": [
          {
            "code": "002",
            "number": "01142951602",
            "mainNumber": true,
            "_id": "65ce4add125f5aa580807fb0"
          }
        ],
        "imageFolderName": "wcf3e6oFC5XGiqUrhFKcX",
        "employee": [
          "65c938ee394e1da8627a72d8"
        ],
        "approved": true,
        "confirmEmail": true,
        "confirmCode": "$2a$08$VrzZtGcC9cHXziti/Y2N3u5WEg/xMh8iZxM98umBS.45y9yikSMmy",
        "forgetCode": null,
        "isDeleted": false,
        "headquarter": "65ce137ff2c8cc22a2b166fd",
        "createdAt": "2024-02-15T17:33:17.925Z",
        "updatedAt": "2024-06-25T17:08:22.128Z",
        "__v": 0,
        "playerId": "6564645",
        "updatedBy": "65c7f5cb1f1940c31b9205d3",
        "commercialRegister": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/jHvArxF3u6VqcNYQLBOhw_SQL.pdf",
        "license": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/ZZ-OTdZNz2TBe2sVgBx7g_good_project.png",
        "taxCard": "uploads/pharmacy/wcf3e6oFC5XGiqUrhFKcX/8S4dnbTc35Exgf-6H317M_good care.png",
        "id": "65ce4add125f5aa580807faf"
      },
      "createdBy": "65ce4add125f5aa580807faf",
      "approved": false,
      "recheck": false,
      "createdAt": "2024-06-02T18:09:45.850Z",
      "updatedAt": "2024-06-02T18:09:45.850Z",
      "__v": 0
    }
  ]
} 
*/

  String? message;
  String? count;
  String? hasNext;
  bool? hasPrevious;
  String? limit;
  List<GetPharmacyRequestModelPharmacies?>? pharmacies;

  GetPharmacyRequestModel({
    this.message,
    this.count,
    this.hasNext,
    this.hasPrevious,
    this.limit,
    this.pharmacies,
  });
  GetPharmacyRequestModel.fromJson(Map<String, dynamic> json) {
    message = json['message']?.toString();
    count = json['count']?.toString();
    hasNext = json['hasNext']?.toString();
    hasPrevious = json['hasPrevious'];
    limit = json['limit']?.toString();
    if (json['pharmacies'] != null) {
      final v = json['pharmacies'];
      final arr0 = <GetPharmacyRequestModelPharmacies>[];
      v.forEach((v) {
        arr0.add(GetPharmacyRequestModelPharmacies.fromJson(v));
      });
      pharmacies = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['message'] = message;
    data['count'] = count;
    data['hasNext'] = hasNext;
    data['hasPrevious'] = hasPrevious;
    data['limit'] = limit;
    if (pharmacies != null) {
      final v = pharmacies;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['pharmacies'] = arr0;
    }
    return data;
  }
}
