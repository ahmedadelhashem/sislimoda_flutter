///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class AddProductModelProductDetails {
/*
{
  "productId": "string",
  "key": "string",
  "keyEn": "string",
  "value": "string",
  "valueEn": "string",
  "icon": "string"
}
*/

  String? productId;
  String? key;
  String? keyEn;
  String? value;
  String? valueEn;
  String? icon;

  AddProductModelProductDetails({
    this.productId,
    this.key,
    this.keyEn,
    this.value,
    this.valueEn,
    this.icon,
  });
  AddProductModelProductDetails.fromJson(Map<String, dynamic> json) {
    productId = json['productId']?.toString();
    key = json['key']?.toString();
    keyEn = json['keyEn']?.toString();
    value = json['value']?.toString();
    valueEn = json['valueEn']?.toString();
    icon = json['icon']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['productId'] = productId;
    data['key'] = key;
    data['keyEn'] = keyEn;
    data['value'] = value;
    data['valueEn'] = valueEn;
    data['icon'] = icon;
    return data;
  }
}

class AddProductModelProductOptions {
/*
{
  "productId": "string",
  "optionId": "string",
  "price": 0
}
*/

  String? productId;
  String? optionId;
  String? price;

  AddProductModelProductOptions({
    this.productId,
    this.optionId,
    this.price,
  });
  AddProductModelProductOptions.fromJson(Map<String, dynamic> json) {
    productId = json['productId']?.toString();
    optionId = json['optionId']?.toString();
    price = json['price']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['productId'] = productId;
    data['optionId'] = optionId;
    data['price'] = price;
    return data;
  }
}

class AddProductModelProductImages {
/*
{
  "productId": "string",
  "photoId": "string"
}
*/

  String? productId;
  String? photoId;

  AddProductModelProductImages({
    this.productId,
    this.photoId,
  });
  AddProductModelProductImages.fromJson(Map<String, dynamic> json) {
    productId = json['productId']?.toString();
    photoId = json['photoId']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['productId'] = productId;
    data['photoId'] = photoId;
    return data;
  }
}

class AddProductModel {
/*
{
  "name": "string",
  "nameEn": "string",
  "description": "string",
  "descriptionEn": "string",
  "defaultPrice": 0,
  "oldPrice": 0,
  "orderNUmber": 0,
  "htmlDescriptions": "string",
  "htmlOther": "string",
  "isActive": true,
  "defaultPhotoId": "string",
  "categoryId": "string",
  "brandId": "string",
  "vendorId": "string",
  "paymentType": "string",
  "noteForReturn": "string",
  "amount": 0,
  "productImages": [
    {
      "productId": "string",
      "photoId": "string"
    }
  ],
  "productOptions": [
    {
      "productId": "string",
      "optionId": "string",
      "price": 0
    }
  ],
  "productDetails": [
    {
      "productId": "string",
      "key": "string",
      "keyEn": "string",
      "value": "string",
      "valueEn": "string",
      "icon": "string"
    }
  ],
  "productPrice": 0,
  "programDiscountPercentage": 0,
  "programDiscountValue": 0,
  "priceAfterProgramInfluencer": 0,
  "influencerPercentage": 0,
  "influencerValue": 0,
  "priceWithInfluencer": 0,
  "maxDiscountWithFamous": 0,
  "productDiscountPercentage": 0,
  "productDiscountValue": 0,
  "priceBeforeDiscount": 0,
  "maxProgramDiscountPercentage": 0,
  "finalDisplayPrice": 0,
  "discountPercentage": 0,
  "evaluationRate": 0,
  "couponDeduction": 0,
  "mainCategoryId": "string",
  "subCategoryId": "string",
  "suggestedSalePriceFromVendor": 0
}
*/

  String? name;
  String? nameEn;
  String? description;
  String? descriptionEn;
  String? defaultPrice;
  String? oldPrice;
  String? orderNUmber;
  String? htmlDescriptions;
  String? htmlOther;
  bool? isActive;
  String? defaultPhotoId;
  String? categoryId;
  String? brandId;
  String? vendorId;
  String? paymentType;
  String? noteForReturn;
  String? amount;
  List<AddProductModelProductImages?>? productImages;
  List<AddProductModelProductOptions?>? productOptions;
  List<AddProductModelProductDetails?>? productDetails;
  String? productPrice;
  String? programDiscountPercentage;
  String? programDiscountValue;
  String? priceAfterProgramInfluencer;
  String? influencerPercentage;
  String? influencerValue;
  String? priceWithInfluencer;
  String? maxDiscountWithFamous;
  String? productDiscountPercentage;
  String? productDiscountValue;
  String? priceBeforeDiscount;
  String? maxProgramDiscountPercentage;
  String? finalDisplayPrice;
  String? discountPercentage;
  String? evaluationRate;
  String? couponDeduction;
  String? mainCategoryId;
  String? subCategoryId;
  String? suggestedSalePriceFromVendor;
  String? totalProductStock;

  AddProductModel({
    this.name,
    this.nameEn,
    this.totalProductStock,
    this.description,
    this.descriptionEn,
    this.defaultPrice,
    this.oldPrice,
    this.orderNUmber,
    this.htmlDescriptions,
    this.htmlOther,
    this.isActive,
    this.defaultPhotoId,
    this.categoryId,
    this.brandId,
    this.vendorId,
    this.paymentType,
    this.noteForReturn,
    this.amount,
    this.productImages,
    this.productOptions,
    this.productDetails,
    this.productPrice,
    this.programDiscountPercentage,
    this.programDiscountValue,
    this.priceAfterProgramInfluencer,
    this.influencerPercentage,
    this.influencerValue,
    this.priceWithInfluencer,
    this.maxDiscountWithFamous,
    this.productDiscountPercentage,
    this.productDiscountValue,
    this.priceBeforeDiscount,
    this.maxProgramDiscountPercentage,
    this.finalDisplayPrice,
    this.discountPercentage,
    this.evaluationRate,
    this.couponDeduction,
    this.mainCategoryId,
    this.subCategoryId,
    this.suggestedSalePriceFromVendor,
  });
  AddProductModel.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    nameEn = json['nameEn']?.toString();
    description = json['description']?.toString();
    descriptionEn = json['descriptionEn']?.toString();
    defaultPrice = json['defaultPrice']?.toString();
    oldPrice = json['oldPrice']?.toString();
    orderNUmber = json['orderNUmber']?.toString();
    htmlDescriptions = json['htmlDescriptions']?.toString();
    htmlOther = json['htmlOther']?.toString();
    isActive = json['isActive'];
    defaultPhotoId = json['defaultPhotoId']?.toString();
    categoryId = json['categoryId']?.toString();
    brandId = json['brandId']?.toString();
    vendorId = json['vendorId']?.toString();
    paymentType = json['paymentType']?.toString();
    noteForReturn = json['noteForReturn']?.toString();
    amount = json['amount']?.toString();
    if (json['productImages'] != null) {
      final v = json['productImages'];
      final arr0 = <AddProductModelProductImages>[];
      v.forEach((v) {
        arr0.add(AddProductModelProductImages.fromJson(v));
      });
      productImages = arr0;
    }
    if (json['productOptions'] != null) {
      final v = json['productOptions'];
      final arr0 = <AddProductModelProductOptions>[];
      v.forEach((v) {
        arr0.add(AddProductModelProductOptions.fromJson(v));
      });
      productOptions = arr0;
    }
    if (json['productDetails'] != null) {
      final v = json['productDetails'];
      final arr0 = <AddProductModelProductDetails>[];
      v.forEach((v) {
        arr0.add(AddProductModelProductDetails.fromJson(v));
      });
      productDetails = arr0;
    }
    productPrice = json['productPrice']?.toString();
    programDiscountPercentage = json['programDiscountPercentage']?.toString();
    programDiscountValue = json['programDiscountValue']?.toString();
    priceAfterProgramInfluencer =
        json['priceAfterProgramInfluencer']?.toString();
    influencerPercentage = json['influencerPercentage']?.toString();
    influencerValue = json['influencerValue']?.toString();
    priceWithInfluencer = json['priceWithInfluencer']?.toString();
    maxDiscountWithFamous = json['maxDiscountWithFamous']?.toString();
    productDiscountPercentage = json['productDiscountPercentage']?.toString();
    productDiscountValue = json['productDiscountValue']?.toString();
    priceBeforeDiscount = json['priceBeforeDiscount']?.toString();
    maxProgramDiscountPercentage =
        json['maxProgramDiscountPercentage']?.toString();
    finalDisplayPrice = json['finalDisplayPrice']?.toString();
    discountPercentage = json['discountPercentage']?.toString();
    evaluationRate = json['evaluationRate']?.toString();
    couponDeduction = json['couponDeduction']?.toString();
    mainCategoryId = json['mainCategoryId']?.toString();
    subCategoryId = json['subCategoryId']?.toString();
    suggestedSalePriceFromVendor =
        json['suggestedSalePriceFromVendor']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['nameEn'] = nameEn;
    data['description'] = description;
    data['descriptionEn'] = descriptionEn;
    data['defaultPrice'] = defaultPrice;
    data['oldPrice'] = oldPrice;
    data['totalProductStock'] = totalProductStock;
    data['orderNUmber'] = orderNUmber;
    data['htmlDescriptions'] = htmlDescriptions;
    data['htmlOther'] = htmlOther;
    data['isActive'] = isActive;
    data['defaultPhotoId'] = defaultPhotoId;
    data['categoryId'] = categoryId;
    data['brandId'] = brandId;
    data['vendorId'] = vendorId;
    data['paymentType'] = paymentType;
    data['noteForReturn'] = noteForReturn;
    data['amount'] = amount;
    if (productImages != null) {
      final v = productImages;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['productImages'] = arr0;
    }
    if (productOptions != null) {
      final v = productOptions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['productOptions'] = arr0;
    }
    if (productDetails != null) {
      final v = productDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['productDetails'] = arr0;
    }
    data['productPrice'] = productPrice;
    data['programDiscountPercentage'] = programDiscountPercentage;
    data['programDiscountValue'] = programDiscountValue;
    data['priceAfterProgramInfluencer'] = priceAfterProgramInfluencer;
    data['influencerPercentage'] = influencerPercentage;
    data['influencerValue'] = influencerValue;
    data['priceWithInfluencer'] = priceWithInfluencer;
    data['maxDiscountWithFamous'] = maxDiscountWithFamous;
    data['productDiscountPercentage'] = productDiscountPercentage;
    data['productDiscountValue'] = productDiscountValue;
    data['priceBeforeDiscount'] = priceBeforeDiscount;
    data['maxProgramDiscountPercentage'] = maxProgramDiscountPercentage;
    data['finalDisplayPrice'] = finalDisplayPrice;
    data['discountPercentage'] = discountPercentage;
    data['evaluationRate'] = evaluationRate;
    data['couponDeduction'] = couponDeduction;
    data['mainCategoryId'] = mainCategoryId;
    data['subCategoryId'] = subCategoryId;
    data['suggestedSalePriceFromVendor'] = suggestedSalePriceFromVendor;
    return data;
  }
}
