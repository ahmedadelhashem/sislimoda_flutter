
import 'dart:convert';

import 'package:sislimoda_admin_dashboard/models/product/product_model.dart';

List<OfferModel> offerModelFromJson(String str) =>
    List<OfferModel>.from(
        json.decode(str).map((x) => OfferModel.fromJson(x)));


///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class OfferModelOffersProductsProductProductImagesPhoto {
/*
{
  "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
  "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
  "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
  "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
} 
*/

  String? id;
  String? imageId;
  String? name;
  String? fullLink;

  OfferModelOffersProductsProductProductImagesPhoto({
    this.id,
    this.imageId,
    this.name,
    this.fullLink,
  });
  OfferModelOffersProductsProductProductImagesPhoto.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    imageId = json['imageId']?.toString();
    name = json['name']?.toString();
    fullLink = json['fullLink']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['imageId'] = imageId;
    data['name'] = name;
    data['fullLink'] = fullLink;
    return data;
  }
}

class OfferModelOffersProductsProductProductImages {
/*
{
  "id": "951d2165-fd38-4736-dd7e-08dc83893163",
  "productId": "bed811e7-558f-473b-e295-08dc1ee594c7",
  "photoId": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
  "photo": {
    "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
    "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
    "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
    "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
  }
} 
*/

  String? id;
  String? productId;
  String? photoId;
  OfferModelOffersProductsProductProductImagesPhoto? photo;

  OfferModelOffersProductsProductProductImages({
    this.id,
    this.productId,
    this.photoId,
    this.photo,
  });
  OfferModelOffersProductsProductProductImages.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    productId = json['productId']?.toString();
    photoId = json['photoId']?.toString();
    photo = (json['photo'] != null) ? OfferModelOffersProductsProductProductImagesPhoto.fromJson(json['photo']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['productId'] = productId;
    data['photoId'] = photoId;
    if (photo != null) {
      data['photo'] = photo!.toJson();
    }
    return data;
  }
}

class OfferModelOffersProductsProductBrand {
/*
{
  "id": "7d18ef71-b924-489d-0ed9-08dc1e1a7720",
  "name": "بوما",
  "nameEn": "Puma",
  "description": "بوما",
  "descriptionEn": "Puma",
  "brandPhotoId": "20f3d34a-d6f8-411a-a397-bd560037f295",
  "brandPhoto": null,
  "order": 0
} 
*/

  String? id;
  String? name;
  String? nameEn;
  String? description;
  String? descriptionEn;
  String? brandPhotoId;
  String? brandPhoto;
  String? order;

  OfferModelOffersProductsProductBrand({
    this.id,
    this.name,
    this.nameEn,
    this.description,
    this.descriptionEn,
    this.brandPhotoId,
    this.brandPhoto,
    this.order,
  });
  OfferModelOffersProductsProductBrand.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
    nameEn = json['nameEn']?.toString();
    description = json['description']?.toString();
    descriptionEn = json['descriptionEn']?.toString();
    brandPhotoId = json['brandPhotoId']?.toString();
    brandPhoto = json['brandPhoto']?.toString();
    order = json['order']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['nameEn'] = nameEn;
    data['description'] = description;
    data['descriptionEn'] = descriptionEn;
    data['brandPhotoId'] = brandPhotoId;
    data['brandPhoto'] = brandPhoto;
    data['order'] = order;
    return data;
  }
}

class OfferModelOffersProductsProductDefaultPhoto {
/*
{
  "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
  "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
  "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
  "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
} 
*/

  String? id;
  String? imageId;
  String? name;
  String? fullLink;

  OfferModelOffersProductsProductDefaultPhoto({
    this.id,
    this.imageId,
    this.name,
    this.fullLink,
  });
  OfferModelOffersProductsProductDefaultPhoto.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    imageId = json['imageId']?.toString();
    name = json['name']?.toString();
    fullLink = json['fullLink']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['imageId'] = imageId;
    data['name'] = name;
    data['fullLink'] = fullLink;
    return data;
  }
}

class OfferModelOffersProductsProduct {
/*
{
  "id": "bed811e7-558f-473b-e295-08dc1ee594c7",
  "name": "حذاء",
  "nameEn": "shoe",
  "description": "حذاء رياضى عالى",
  "descriptionEn": "High sports shoes",
  "defaultPrice": 28,
  "oldPrice": 0,
  "orderNUmber": 0,
  "htmlDescriptions": "string",
  "htmlOther": "string",
  "isActive": true,
  "defaultPhotoId": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
  "defaultPhoto": {
    "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
    "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
    "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
    "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
  },
  "categoryId": "10157622-7010-4ee4-8786-08dc1e165a43",
  "vendorId": "0fd4806d-e6e6-48df-7b91-08dc1ed95a1b",
  "amount": 8,
  "brandId": "7d18ef71-b924-489d-0ed9-08dc1e1a7720",
  "brand": {
    "id": "7d18ef71-b924-489d-0ed9-08dc1e1a7720",
    "name": "بوما",
    "nameEn": "Puma",
    "description": "بوما",
    "descriptionEn": "Puma",
    "brandPhotoId": "20f3d34a-d6f8-411a-a397-bd560037f295",
    "brandPhoto": null,
    "order": 0
  },
  "paymentType": "string",
  "noteForReturn": "Return in 14 days",
  "created": "27-01-2024 13:18:49",
  "category": null,
  "productImages": [
    {
      "id": "951d2165-fd38-4736-dd7e-08dc83893163",
      "productId": "bed811e7-558f-473b-e295-08dc1ee594c7",
      "photoId": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
      "photo": {
        "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
        "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
        "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
        "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
      }
    }
  ],
  "productOptions": [
    null
  ],
  "productDetails": [
    null
  ],
  "isFavourite": false,
  "productPrice": 0,
  "programDiscountPercentage": 0,
  "programDiscountValue": 0,
  "priceAfterProgramInfluencer": 0,
  "influencerPercentage": 0,
  "influencerValue": 0,
  "priceWithInfluencer": 0,
  "maxDiscountWithFamous": 0,
  "productDiscountPercentage": 0,
  "productDiscountValue": 0,
  "priceBeforeDiscount": 0,
  "maxProgramDiscountPercentage": 0,
  "finalDisplayPrice": 0,
  "offers": null,
  "discountPercentage": 0
} 
*/

  String? id;
  String? name;
  String? nameEn;
  String? description;
  String? descriptionEn;
  String? defaultPrice;
  String? oldPrice;
  String? orderNUmber;
  String? htmlDescriptions;
  String? htmlOther;
  bool? isActive;
  String? defaultPhotoId;
  OfferModelOffersProductsProductDefaultPhoto? defaultPhoto;
  String? categoryId;
  String? vendorId;
  String? amount;
  String? brandId;
  OfferModelOffersProductsProductBrand? brand;
  String? paymentType;
  String? noteForReturn;
  String? created;
  String? category;
  List<OfferModelOffersProductsProductProductImages?>? productImages;
  List<String?>? productOptions;
  List<String?>? productDetails;
  bool? isFavourite;
  String? productPrice;
  String? programDiscountPercentage;
  String? programDiscountValue;
  String? priceAfterProgramInfluencer;
  String? influencerPercentage;
  String? influencerValue;
  String? priceWithInfluencer;
  String? maxDiscountWithFamous;
  String? productDiscountPercentage;
  String? productDiscountValue;
  String? priceBeforeDiscount;
  String? maxProgramDiscountPercentage;
  String? finalDisplayPrice;
  String? offers;
  String? discountPercentage;

  OfferModelOffersProductsProduct({
    this.id,
    this.name,
    this.nameEn,
    this.description,
    this.descriptionEn,
    this.defaultPrice,
    this.oldPrice,
    this.orderNUmber,
    this.htmlDescriptions,
    this.htmlOther,
    this.isActive,
    this.defaultPhotoId,
    this.defaultPhoto,
    this.categoryId,
    this.vendorId,
    this.amount,
    this.brandId,
    this.brand,
    this.paymentType,
    this.noteForReturn,
    this.created,
    this.category,
    this.productImages,
    this.productOptions,
    this.productDetails,
    this.isFavourite,
    this.productPrice,
    this.programDiscountPercentage,
    this.programDiscountValue,
    this.priceAfterProgramInfluencer,
    this.influencerPercentage,
    this.influencerValue,
    this.priceWithInfluencer,
    this.maxDiscountWithFamous,
    this.productDiscountPercentage,
    this.productDiscountValue,
    this.priceBeforeDiscount,
    this.maxProgramDiscountPercentage,
    this.finalDisplayPrice,
    this.offers,
    this.discountPercentage,
  });
  OfferModelOffersProductsProduct.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
    nameEn = json['nameEn']?.toString();
    description = json['description']?.toString();
    descriptionEn = json['descriptionEn']?.toString();
    defaultPrice = json['defaultPrice']?.toString();
    oldPrice = json['oldPrice']?.toString();
    orderNUmber = json['orderNUmber']?.toString();
    htmlDescriptions = json['htmlDescriptions']?.toString();
    htmlOther = json['htmlOther']?.toString();
    isActive = json['isActive'];
    defaultPhotoId = json['defaultPhotoId']?.toString();
    defaultPhoto = (json['defaultPhoto'] != null) ? OfferModelOffersProductsProductDefaultPhoto.fromJson(json['defaultPhoto']) : null;
    categoryId = json['categoryId']?.toString();
    vendorId = json['vendorId']?.toString();
    amount = json['amount']?.toString();
    brandId = json['brandId']?.toString();
    brand = (json['brand'] != null) ? OfferModelOffersProductsProductBrand.fromJson(json['brand']) : null;
    paymentType = json['paymentType']?.toString();
    noteForReturn = json['noteForReturn']?.toString();
    created = json['created']?.toString();
    category = json['category']?.toString();
    if (json['productImages'] != null) {
      final v = json['productImages'];
      final arr0 = <OfferModelOffersProductsProductProductImages>[];
      v.forEach((v) {
        arr0.add(OfferModelOffersProductsProductProductImages.fromJson(v));
      });
      productImages = arr0;
    }
    
    
    isFavourite = json['isFavourite'];
    productPrice = json['productPrice']?.toString();
    programDiscountPercentage = json['programDiscountPercentage']?.toString();
    programDiscountValue = json['programDiscountValue']?.toString();
    priceAfterProgramInfluencer = json['priceAfterProgramInfluencer']?.toString();
    influencerPercentage = json['influencerPercentage']?.toString();
    influencerValue = json['influencerValue']?.toString();
    priceWithInfluencer = json['priceWithInfluencer']?.toString();
    maxDiscountWithFamous = json['maxDiscountWithFamous']?.toString();
    productDiscountPercentage = json['productDiscountPercentage']?.toString();
    productDiscountValue = json['productDiscountValue']?.toString();
    priceBeforeDiscount = json['priceBeforeDiscount']?.toString();
    maxProgramDiscountPercentage = json['maxProgramDiscountPercentage']?.toString();
    finalDisplayPrice = json['finalDisplayPrice']?.toString();
    offers = json['offers']?.toString();
    discountPercentage = json['discountPercentage']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['nameEn'] = nameEn;
    data['description'] = description;
    data['descriptionEn'] = descriptionEn;
    data['defaultPrice'] = defaultPrice;
    data['oldPrice'] = oldPrice;
    data['orderNUmber'] = orderNUmber;
    data['htmlDescriptions'] = htmlDescriptions;
    data['htmlOther'] = htmlOther;
    data['isActive'] = isActive;
    data['defaultPhotoId'] = defaultPhotoId;
    if (defaultPhoto != null) {
      data['defaultPhoto'] = defaultPhoto!.toJson();
    }
    data['categoryId'] = categoryId;
    data['vendorId'] = vendorId;
    data['amount'] = amount;
    data['brandId'] = brandId;
    if (brand != null) {
      data['brand'] = brand!.toJson();
    }
    data['paymentType'] = paymentType;
    data['noteForReturn'] = noteForReturn;
    data['created'] = created;
    data['category'] = category;
    if (productImages != null) {
      final v = productImages;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['productImages'] = arr0;
    }
    
    
    data['isFavourite'] = isFavourite;
    data['productPrice'] = productPrice;
    data['programDiscountPercentage'] = programDiscountPercentage;
    data['programDiscountValue'] = programDiscountValue;
    data['priceAfterProgramInfluencer'] = priceAfterProgramInfluencer;
    data['influencerPercentage'] = influencerPercentage;
    data['influencerValue'] = influencerValue;
    data['priceWithInfluencer'] = priceWithInfluencer;
    data['maxDiscountWithFamous'] = maxDiscountWithFamous;
    data['productDiscountPercentage'] = productDiscountPercentage;
    data['productDiscountValue'] = productDiscountValue;
    data['priceBeforeDiscount'] = priceBeforeDiscount;
    data['maxProgramDiscountPercentage'] = maxProgramDiscountPercentage;
    data['finalDisplayPrice'] = finalDisplayPrice;
    data['offers'] = offers;
    data['discountPercentage'] = discountPercentage;
    return data;
  }
}

class OfferModelOffersProducts {
/*
{
  "id": "bbe74c69-ecdc-4e12-2825-08dc245b69d4",
  "offersId": "d6c42c08-6b5d-45f1-ca55-08dc245b5054",
  "productId": "bed811e7-558f-473b-e295-08dc1ee594c7",
  "product": {
    "id": "bed811e7-558f-473b-e295-08dc1ee594c7",
    "name": "حذاء",
    "nameEn": "shoe",
    "description": "حذاء رياضى عالى",
    "descriptionEn": "High sports shoes",
    "defaultPrice": 28,
    "oldPrice": 0,
    "orderNUmber": 0,
    "htmlDescriptions": "string",
    "htmlOther": "string",
    "isActive": true,
    "defaultPhotoId": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
    "defaultPhoto": {
      "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
      "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
      "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
      "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
    },
    "categoryId": "10157622-7010-4ee4-8786-08dc1e165a43",
    "vendorId": "0fd4806d-e6e6-48df-7b91-08dc1ed95a1b",
    "amount": 8,
    "brandId": "7d18ef71-b924-489d-0ed9-08dc1e1a7720",
    "brand": {
      "id": "7d18ef71-b924-489d-0ed9-08dc1e1a7720",
      "name": "بوما",
      "nameEn": "Puma",
      "description": "بوما",
      "descriptionEn": "Puma",
      "brandPhotoId": "20f3d34a-d6f8-411a-a397-bd560037f295",
      "brandPhoto": null,
      "order": 0
    },
    "paymentType": "string",
    "noteForReturn": "Return in 14 days",
    "created": "27-01-2024 13:18:49",
    "category": null,
    "productImages": [
      {
        "id": "951d2165-fd38-4736-dd7e-08dc83893163",
        "productId": "bed811e7-558f-473b-e295-08dc1ee594c7",
        "photoId": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
        "photo": {
          "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
          "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
          "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
          "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
        }
      }
    ],
    "productOptions": [
      null
    ],
    "productDetails": [
      null
    ],
    "isFavourite": false,
    "productPrice": 0,
    "programDiscountPercentage": 0,
    "programDiscountValue": 0,
    "priceAfterProgramInfluencer": 0,
    "influencerPercentage": 0,
    "influencerValue": 0,
    "priceWithInfluencer": 0,
    "maxDiscountWithFamous": 0,
    "productDiscountPercentage": 0,
    "productDiscountValue": 0,
    "priceBeforeDiscount": 0,
    "maxProgramDiscountPercentage": 0,
    "finalDisplayPrice": 0,
    "offers": null,
    "discountPercentage": 0
  }
} 
*/

  String? id;
  String? offersId;
  String? productId;
  ProductModel? product;

  OfferModelOffersProducts({
    this.id,
    this.offersId,
    this.productId,
    this.product,
  });
  OfferModelOffersProducts.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    offersId = json['offersId']?.toString();
    productId = json['productId']?.toString();
    product = (json['product'] != null) ? ProductModel.fromJson(json['product']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['offersId'] = offersId;
    data['productId'] = productId;
    if (product != null) {
      data['product'] = product!.toJson();
    }
    return data;
  }
}

class OfferModelOfferCategory {
/*
{
  "id": "c72c612e-9f80-4381-8781-08dc1e165a43",
  "mainCategoryId": null,
  "mainCategory": null,
  "name": "الرجال",
  "nameEn": "Mens",
  "description": "الرجال",
  "descriptionEn": "Mens",
  "categoryPhotoId": "f679ee58-a4c6-4111-a478-b32b3256d84c",
  "categoryPhoto": null,
  "order": 0
} 
*/

  String? id;
  String? mainCategoryId;
  String? mainCategory;
  String? name;
  String? nameEn;
  String? description;
  String? descriptionEn;
  String? categoryPhotoId;
  String? categoryPhoto;
  String? order;

  OfferModelOfferCategory({
    this.id,
    this.mainCategoryId,
    this.mainCategory,
    this.name,
    this.nameEn,
    this.description,
    this.descriptionEn,
    this.categoryPhotoId,
    this.categoryPhoto,
    this.order,
  });
  OfferModelOfferCategory.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    mainCategoryId = json['mainCategoryId']?.toString();
    mainCategory = json['mainCategory']?.toString();
    name = json['name']?.toString();
    nameEn = json['nameEn']?.toString();
    description = json['description']?.toString();
    descriptionEn = json['descriptionEn']?.toString();
    categoryPhotoId = json['categoryPhotoId']?.toString();
    categoryPhoto = json['categoryPhoto']?.toString();
    order = json['order']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['mainCategoryId'] = mainCategoryId;
    data['mainCategory'] = mainCategory;
    data['name'] = name;
    data['nameEn'] = nameEn;
    data['description'] = description;
    data['descriptionEn'] = descriptionEn;
    data['categoryPhotoId'] = categoryPhotoId;
    data['categoryPhoto'] = categoryPhoto;
    data['order'] = order;
    return data;
  }
}

class OfferModelPhoto {
/*
{
  "id": "d64ecb48-809e-45a4-b3c0-eef1c078ccb3",
  "imageId": "37c1cbc3-79fb-4511-965a-112126525c3f",
  "name": "37c1cbc3-79fb-4511-965a-112126525c3f.png",
  "fullLink": "https://sislimoda.com/Files/37c1cbc3-79fb-4511-965a-112126525c3f.png"
} 
*/

  String? id;
  String? imageId;
  String? name;
  String? fullLink;

  OfferModelPhoto({
    this.id,
    this.imageId,
    this.name,
    this.fullLink,
  });
  OfferModelPhoto.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    imageId = json['imageId']?.toString();
    name = json['name']?.toString();
    fullLink = json['fullLink']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['imageId'] = imageId;
    data['name'] = name;
    data['fullLink'] = fullLink;
    return data;
  }
}

class OfferModel {
/*
{
  "id": "d6c42c08-6b5d-45f1-ca55-08dc245b5054",
  "code": "offer 1 ",
  "title": "العرض 1",
  "description": "العرض ",
  "titleEn": "offer 1 ",
  "descriptionEn": "offer 1",
  "offerType": 1,
  "amount": 0,
  "percent": 0.9,
  "mustExceed": 0,
  "startDate": "03-02-2024 07:00:00",
  "endDate": "13-09-2024 07:00:00",
  "photoId": "d64ecb48-809e-45a4-b3c0-eef1c078ccb3",
  "photo": {
    "id": "d64ecb48-809e-45a4-b3c0-eef1c078ccb3",
    "imageId": "37c1cbc3-79fb-4511-965a-112126525c3f",
    "name": "37c1cbc3-79fb-4511-965a-112126525c3f.png",
    "fullLink": "https://sislimoda.com/Files/37c1cbc3-79fb-4511-965a-112126525c3f.png"
  },
  "isActive": true,
  "vendorId": null,
  "vendor": null,
  "isForVendor": false,
  "offerCategory": {
    "id": "c72c612e-9f80-4381-8781-08dc1e165a43",
    "mainCategoryId": null,
    "mainCategory": null,
    "name": "الرجال",
    "nameEn": "Mens",
    "description": "الرجال",
    "descriptionEn": "Mens",
    "categoryPhotoId": "f679ee58-a4c6-4111-a478-b32b3256d84c",
    "categoryPhoto": null,
    "order": 0
  },
  "offerCategoryId": "c72c612e-9f80-4381-8781-08dc1e165a43",
  "order": null,
  "codeDescription": null,
  "offersProducts": [
    {
      "id": "bbe74c69-ecdc-4e12-2825-08dc245b69d4",
      "offersId": "d6c42c08-6b5d-45f1-ca55-08dc245b5054",
      "productId": "bed811e7-558f-473b-e295-08dc1ee594c7",
      "product": {
        "id": "bed811e7-558f-473b-e295-08dc1ee594c7",
        "name": "حذاء",
        "nameEn": "shoe",
        "description": "حذاء رياضى عالى",
        "descriptionEn": "High sports shoes",
        "defaultPrice": 28,
        "oldPrice": 0,
        "orderNUmber": 0,
        "htmlDescriptions": "string",
        "htmlOther": "string",
        "isActive": true,
        "defaultPhotoId": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
        "defaultPhoto": {
          "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
          "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
          "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
          "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
        },
        "categoryId": "10157622-7010-4ee4-8786-08dc1e165a43",
        "vendorId": "0fd4806d-e6e6-48df-7b91-08dc1ed95a1b",
        "amount": 8,
        "brandId": "7d18ef71-b924-489d-0ed9-08dc1e1a7720",
        "brand": {
          "id": "7d18ef71-b924-489d-0ed9-08dc1e1a7720",
          "name": "بوما",
          "nameEn": "Puma",
          "description": "بوما",
          "descriptionEn": "Puma",
          "brandPhotoId": "20f3d34a-d6f8-411a-a397-bd560037f295",
          "brandPhoto": null,
          "order": 0
        },
        "paymentType": "string",
        "noteForReturn": "Return in 14 days",
        "created": "27-01-2024 13:18:49",
        "category": null,
        "productImages": [
          {
            "id": "951d2165-fd38-4736-dd7e-08dc83893163",
            "productId": "bed811e7-558f-473b-e295-08dc1ee594c7",
            "photoId": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
            "photo": {
              "id": "8d6a2286-b8f6-4c41-a3bf-1411464d9588",
              "imageId": "4de4c694-c79e-46f6-9604-5a2c6b91ed82",
              "name": "4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg",
              "fullLink": "https://sislimoda.com/Files/4de4c694-c79e-46f6-9604-5a2c6b91ed82.jpg"
            }
          }
        ],
        "productOptions": [
          null
        ],
        "productDetails": [
          null
        ],
        "isFavourite": false,
        "productPrice": 0,
        "programDiscountPercentage": 0,
        "programDiscountValue": 0,
        "priceAfterProgramInfluencer": 0,
        "influencerPercentage": 0,
        "influencerValue": 0,
        "priceWithInfluencer": 0,
        "maxDiscountWithFamous": 0,
        "productDiscountPercentage": 0,
        "productDiscountValue": 0,
        "priceBeforeDiscount": 0,
        "maxProgramDiscountPercentage": 0,
        "finalDisplayPrice": 0,
        "offers": null,
        "discountPercentage": 0
      }
    }
  ]
} 
*/

  String? id;
  String? code;
  String? title;
  String? description;
  String? titleEn;
  String? descriptionEn;
  String? offerType;
  String? amount;
  String? percent;
  String? mustExceed;
  String? startDate;
  String? endDate;
  String? photoId;
  OfferModelPhoto? photo;
  bool? isActive;
  String? vendorId;
  String? vendor;
  bool? isForVendor;
  OfferModelOfferCategory? offerCategory;
  String? offerCategoryId;
  String? order;
  String? codeDescription;
  List<OfferModelOffersProducts?>? offersProducts;

  OfferModel({
    this.id,
    this.code,
    this.title,
    this.description,
    this.titleEn,
    this.descriptionEn,
    this.offerType,
    this.amount,
    this.percent,
    this.mustExceed,
    this.startDate,
    this.endDate,
    this.photoId,
    this.photo,
    this.isActive,
    this.vendorId,
    this.vendor,
    this.isForVendor,
    this.offerCategory,
    this.offerCategoryId,
    this.order,
    this.codeDescription,
    this.offersProducts,
  });
  OfferModel.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    title = json['title']?.toString();
    description = json['description']?.toString();
    titleEn = json['titleEn']?.toString();
    descriptionEn = json['descriptionEn']?.toString();
    offerType = json['offerType']?.toString();
    amount = json['amount']?.toString();
    percent = json['percent']?.toString();
    mustExceed = json['mustExceed']?.toString();
    startDate = json['startDate']?.toString();
    endDate = json['endDate']?.toString();
    photoId = json['photoId']?.toString();
    photo = (json['photo'] != null) ? OfferModelPhoto.fromJson(json['photo']) : null;
    isActive = json['isActive'];
    vendorId = json['vendorId']?.toString();
    vendor = json['vendor']?.toString();
    isForVendor = json['isForVendor'];
    offerCategory = (json['offerCategory'] != null) ? OfferModelOfferCategory.fromJson(json['offerCategory']) : null;
    offerCategoryId = json['offerCategoryId']?.toString();
    order = json['order']?.toString();
    codeDescription = json['codeDescription']?.toString();
    if (json['offersProducts'] != null) {
      final v = json['offersProducts'];
      final arr0 = <OfferModelOffersProducts>[];
      v.forEach((v) {
        arr0.add(OfferModelOffersProducts.fromJson(v));
      });
      offersProducts = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['title'] = title;
    data['description'] = description;
    data['titleEn'] = titleEn;
    data['descriptionEn'] = descriptionEn;
    data['offerType'] = offerType;
    data['amount'] = amount;
    data['percent'] = percent;
    data['mustExceed'] = mustExceed;
    data['startDate'] = startDate;
    data['endDate'] = endDate;
    data['photoId'] = photoId;
    if (photo != null) {
      data['photo'] = photo!.toJson();
    }
    data['isActive'] = isActive;
    data['vendorId'] = vendorId;
    data['vendor'] = vendor;
    data['isForVendor'] = isForVendor;
    if (offerCategory != null) {
      data['offerCategory'] = offerCategory!.toJson();
    }
    data['offerCategoryId'] = offerCategoryId;
    data['order'] = order;
    data['codeDescription'] = codeDescription;
    if (offersProducts != null) {
      final v = offersProducts;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['offersProducts'] = arr0;
    }
    return data;
  }
}

